{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/_services/products.service\";\nexport let ModificationComponent = /*#__PURE__*/(() => {\n  class ModificationComponent {\n    constructor(route, fb, productService, router) {\n      this.route = route;\n      this.fb = fb;\n      this.productService = productService;\n      this.router = router;\n      this.productId = 0;\n      this.productForm = this.fb.group({\n        name: ['', {\n          Validators: [Validators.required, Validators.minLength(5), Validators.maxLength(15)]\n        }],\n        description: ['', Validators.required],\n        price: [0, {\n          Validators: [Validators.required]\n        }]\n      });\n    }\n\n    ngOnInit() {\n      if (this.route.snapshot.params['productId'] > 0) {\n        this.productId = this.route.snapshot.params['productId'];\n        this.getProductDetails(this.productId);\n      }\n    }\n\n    getProductDetails(productId) {\n      this.productForm.addControl('id', this.fb.control(productId, Validators.required));\n      this.productService.getProduct(productId).subscribe(response => {\n        this.productForm.patchValue({\n          name: response.name,\n          description: response.description,\n          price: response.price\n        });\n      });\n    }\n\n    ProductFormSubmition() {\n      if (this.productId > 0) {\n        const productEditionModel = this.productForm.value; //update\n\n        this.productService.UpdateProduct(productEditionModel).subscribe(() => {\n          this.router.navigateByUrl('/products');\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Product updated successfully',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        });\n      } else {\n        //create\n        const productCreationModel = this.productForm.value;\n        this.productService.CreateProduct(productCreationModel).subscribe(() => {\n          this.router.navigateByUrl('/products');\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Product created successfully',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        });\n      }\n    }\n\n  }\n\n  ModificationComponent.ɵfac = function ModificationComponent_Factory(t) {\n    return new (t || ModificationComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ProductsService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  ModificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModificationComponent,\n    selectors: [[\"app-modification\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"justify-content-center\", \"my-3\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-body\"], [1, \"col\", \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"price\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", \"min\", \"1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"disabled\"]],\n    template: function ModificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ModificationComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.productForm.valid && ctx.ProductFormSubmition();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", ctx.productForm.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return ModificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}