{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/_services/customers.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction CreateOrderComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\");\n  }\n}\n\nexport class CreateOrderComponent {\n  constructor(fb, customerService) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.orderForm = this.fb.group({\n      status: [true, Validators.required],\n      tax: [0, Validators.required],\n      subTotal: [0, Validators.required],\n      grandTotal: [0, Validators.required],\n      date: ['', Validators.required],\n      customerId: [0, Validators.required],\n      shippingAddressId: [0, Validators.required],\n      billingAddressId: [0, Validators.required] // addresses: this.fb.array([])\n\n    });\n  }\n\n  ngOnInit() {}\n\n  getCustomers() {\n    return this.customerService.getAllCustomers();\n  }\n\n  orderFormSubmition() {\n    console.log(this.orderForm);\n  }\n\n}\n\nCreateOrderComponent.ɵfac = function CreateOrderComponent_Factory(t) {\n  return new (t || CreateOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomersService));\n};\n\nCreateOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateOrderComponent,\n  selectors: [[\"app-create-order\"]],\n  decls: 35,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-5\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"radio\", \"formControlName\", \"status\", \"id\", \"cancel\", 3, \"value\"], [\"for\", \"cancel\", 1, \"form-check-label\", \"ms-1\"], [\"type\", \"radio\", \"formControlName\", \"status\", \"id\", \"active\", 1, \"ms-5\", 3, \"value\"], [\"for\", \"active\", 1, \"form-check-label\", \"ms-1\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"tax\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"tax\", \"formControlName\", \"tax\", 1, \"form-control\"], [\"for\", \"subTotal\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"subTotal\", \"formControlName\", \"subTotal\", 1, \"form-control\"], [\"for\", \"grandTotal\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"grandTotal\", \"formControlName\", \"grandTotal\", 1, \"form-control\"], [\"for\", \"date\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"date\", \"formControlName\", \"date\", 1, \"form-control\"], [\"for\", \"customerId\", 1, \"form-label\"], [\"id\", \"customerId\", 1, \"form-control\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function CreateOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateOrderComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.orderForm.valid && ctx.orderFormSubmition();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 1)(4, \"div\", 3);\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementStart(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Active\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Tax\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Sub Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"Grand Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 15);\n      i0.ɵɵtext(25, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 18);\n      i0.ɵɵtemplate(31, CreateOrderComponent_option_31_Template, 1, 0, \"option\", 19);\n      i0.ɵɵpipe(32, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"button\", 20);\n      i0.ɵɵtext(34, \"Create\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", false);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"value\", true);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(32, 5, ctx.getCustomers()));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.orderForm.invalid);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhdGUtb3JkZXIuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAT,QAAwC,gBAAxC;;;;;;;;IC6BwBC;;;;ADrBxB,OAAM,MAAOC,oBAAP,CAA2B;EAc/BC,YAAoBC,EAApB,EAA4CC,eAA5C,EAA6E;IAAzD;IAAwB;IAZ5C,iBAAY,KAAKD,EAAL,CAAQE,KAAR,CAAc;MACxBC,MAAM,EAAE,CAAC,IAAD,EAAQP,UAAU,CAACQ,QAAnB,CADgB;MAExBC,GAAG,EAAE,CAAC,CAAD,EAAIT,UAAU,CAACQ,QAAf,CAFmB;MAGxBE,QAAQ,EAAE,CAAC,CAAD,EAAIV,UAAU,CAACQ,QAAf,CAHc;MAIxBG,UAAU,EAAE,CAAC,CAAD,EAAIX,UAAU,CAACQ,QAAf,CAJY;MAKxBI,IAAI,EAAE,CAAC,EAAD,EAAKZ,UAAU,CAACQ,QAAhB,CALkB;MAMxBK,UAAU,EAAE,CAAC,CAAD,EAAIb,UAAU,CAACQ,QAAf,CANY;MAOxBM,iBAAiB,EAAE,CAAC,CAAD,EAAId,UAAU,CAACQ,QAAf,CAPK;MAQxBO,gBAAgB,EAAE,CAAC,CAAD,EAAIf,UAAU,CAACQ,QAAf,CARM,CASxB;;IATwB,CAAd,CAAZ;EAYkF;;EAElFQ,QAAQ,IACP;;EAEDC,YAAY;IACV,OAAO,KAAKZ,eAAL,CAAqBa,eAArB,EAAP;EACD;;EAEDC,kBAAkB;IAChBC,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;EACD;;AAzB8B;;;mBAApBpB,sBAAoBD;AAAA;;;QAApBC;EAAoBqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjC1B;MAA8BA;QAAA,8BAA+B2B,wBAA/B;MAAmD,CAAnD;MAC1B3B,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB;MAIgBA;MACAA;MAAkDA;MAAMA;MAExDA;MACAA;MAAkDA;MAAMA;MAE5DA,gCAA2B,EAA3B,EAA2B,OAA3B,EAA2B,CAA3B;MACwCA;MAAGA;MACvCA;MACJA;MACAA,gCAA2B,EAA3B,EAA2B,OAA3B,EAA2B,EAA3B;MAC6CA;MAASA;MAClDA;MACJA;MACAA,gCAA4B,EAA5B,EAA4B,OAA5B,EAA4B,EAA5B;MAC+CA;MAAWA;MACtDA;MACJA;MACAA,gCAA4B,EAA5B,EAA4B,OAA5B,EAA4B,EAA5B;MACyCA;MAAIA;MACzCA;MACJA;MACAA,gCAA4B,EAA5B,EAA4B,OAA5B,EAA4B,EAA5B;MAC+CA;MAAQA;MACnDA;MACIA;;MACJA;MAEJA;MAA6EA;MAAMA;;;;MAjC7FA;MAKuEA;MAAAA;MAGaA;MAAAA;MAsBrCA;MAAAA;MAGLA;MAAAA","names":["Validators","i0","CreateOrderComponent","constructor","fb","customerService","group","status","required","tax","subTotal","grandTotal","date","customerId","shippingAddressId","billingAddressId","ngOnInit","getCustomers","getAllCustomers","orderFormSubmition","console","log","orderForm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Working on projects\\CRM\\CRM-Client\\src\\app\\_views\\orders\\create-order\\create-order.component.ts","F:\\Working on projects\\CRM\\CRM-Client\\src\\app\\_views\\orders\\create-order\\create-order.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { CustomersService } from 'src/app/_services/customers.service';\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.scss']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  orderForm = this.fb.group({\n    status: [true , Validators.required],\n    tax: [0, Validators.required],\n    subTotal: [0, Validators.required],\n    grandTotal: [0, Validators.required],\n    date: ['', Validators.required],\n    customerId: [0, Validators.required],\n    shippingAddressId: [0, Validators.required],\n    billingAddressId: [0, Validators.required]\n    // addresses: this.fb.array([])\n  });\n\n  constructor(private fb:FormBuilder, private customerService: CustomersService) { }\n\n  ngOnInit(): void {\n  }\n\n  getCustomers(){\n    return this.customerService.getAllCustomers();\n  }\n\n  orderFormSubmition(){\n    console.log(this.orderForm);\n  }\n\n}\n","<form [formGroup]=\"orderForm\" (ngSubmit)=\"orderForm.valid && orderFormSubmition()\">\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <div class=\"row\">\n                <div class=\"col-md-12 mb-3\">\n                    <input type=\"radio\" formControlName=\"status\" id=\"cancel\" [value]=\"false\">\n                    <label class=\"form-check-label ms-1\" for=\"cancel\">Cancel</label>\n                    \n                    <input type=\"radio\" class=\"ms-5\" formControlName=\"status\" id=\"active\" [value]=\"true\">\n                    <label class=\"form-check-label ms-1\" for=\"active\">Active</label>\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                    <label for=\"tax\" class=\"form-label\">Tax</label>\n                    <input type=\"number\" class=\"form-control\" id=\"tax\" formControlName=\"tax\">\n                </div>\n                <div class=\"col-md-6 mb-3\">\n                    <label for=\"subTotal\" class=\"form-label\">Sub Total</label>\n                    <input type=\"number\" class=\"form-control\" id=\"subTotal\" formControlName=\"subTotal\">\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label for=\"grandTotal\" class=\"form-label\">Grand Total</label>\n                    <input type=\"number\" class=\"form-control\" id=\"grandTotal\" formControlName=\"grandTotal\">\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label for=\"date\" class=\"form-label\">Date</label>\n                    <input type=\"date\" class=\"form-control\" id=\"date\" formControlName=\"date\">\n                </div>\n                <div class=\"col-md-12 mb-3\">\n                    <label for=\"customerId\" class=\"form-label\">Customer</label>\n                    <select class=\"form-control\" id=\"customerId\">\n                        <option *ngFor=\"let customer of (getCustomers() | async)\"></option>\n                    </select>\n                </div>\n                <button class=\"btn btn-primary\" [disabled]=\"orderForm.invalid\" type=\"submit\">Create</button>            \n            </div>    \n        </div>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module"}