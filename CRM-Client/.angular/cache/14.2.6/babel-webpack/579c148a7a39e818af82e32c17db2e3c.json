{"ast":null,"code":"import { FormArray, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/customers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction CreateCustomerComponent_ng_container_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27)(2, \"div\", 4)(3, \"div\", 28)(4, \"div\", 5)(5, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CreateCustomerComponent_ng_container_39_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeAddress(i_r2));\n    });\n    i0.ɵɵtext(6, \"Remove\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 30)(8, \"label\", 31);\n    i0.ɵɵtext(9, \"Line1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 30)(12, \"label\", 33);\n    i0.ɵɵtext(13, \"Line2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 30)(16, \"label\", 35);\n    i0.ɵɵtext(17, \"Postal Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 30)(20, \"label\", 37);\n    i0.ɵɵtext(21, \"Country\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 30)(24, \"label\", 39);\n    i0.ɵɵtext(25, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 30)(28, \"label\", 41);\n    i0.ɵɵtext(29, \"State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 21);\n    i0.ɵɵelement(32, \"input\", 43);\n    i0.ɵɵelementStart(33, \"label\", 44);\n    i0.ɵɵtext(34, \"Shipping Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"input\", 45);\n    i0.ɵɵelementStart(36, \"label\", 44);\n    i0.ɵɵtext(37, \"Billing Address\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(29);\n    i0.ɵɵproperty(\"id\", \"shippingAddress\" + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"shippingAddress\" + i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"billingAddress\" + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"billingAddress\" + i_r2);\n  }\n}\n\nexport let CreateCustomerComponent = /*#__PURE__*/(() => {\n  class CreateCustomerComponent {\n    constructor(customersService, router, fb) {\n      this.customersService = customersService;\n      this.router = router;\n      this.fb = fb;\n      this.customerForm = this.fb.group({\n        code: ['', {\n          Validators: [Validators.required, Validators.minLength(5), Validators.maxLength(15)]\n        }],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', {\n          Validators: [Validators.required, Validators.email]\n        }],\n        phone: [''],\n        status: [true, Validators.required],\n        addresses: this.fb.array([])\n      });\n    }\n\n    ngOnInit() {\n      this.addAddress();\n    }\n\n    get addresses() {\n      return this.customerForm.controls[\"addresses\"];\n    }\n\n    addAddress() {\n      const addressForm = this.fb.group({\n        line1: ['', Validators.required],\n        line2: [''],\n        country: ['', Validators.required],\n        city: ['', Validators.required],\n        state: ['', Validators.required],\n        postalCode: [''],\n        addressType: ['', Validators.required],\n        shippingAddress: [''],\n        billingAddress: ['']\n      });\n      this.addresses.push(addressForm);\n    }\n\n    removeAddress(addressIndex) {\n      this.addresses.removeAt(addressIndex);\n    }\n\n    formSubmition() {\n      this.customerForm.controls[\"addresses\"].controls.forEach(element => {\n        if (element.get('addressType')?.value == 'shipping') {\n          element.get('shippingAddress')?.setValue(true);\n          element.get('billingAddress')?.setValue(false);\n        } else {\n          element.get('billingAddress')?.setValue(true);\n          element.get('shippingAddress')?.setValue(false);\n        }\n      });\n      const customerCreationModel = this.customerForm.value;\n      this.customersService.CreateCustomer(customerCreationModel).subscribe(() => {\n        this.router.navigateByUrl('/customers');\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'New customer created successfully',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      });\n    }\n\n  }\n\n  CreateCustomerComponent.ɵfac = function CreateCustomerComponent_Factory(t) {\n    return new (t || CreateCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  CreateCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCustomerComponent,\n    selectors: [[\"app-create-customer\"]],\n    decls: 42,\n    vars: 5,\n    consts: [[1, \"my-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-5\"], [1, \"card\"], [1, \"card-body\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"radio\", \"formControlName\", \"status\", \"id\", \"active\", 3, \"value\"], [\"for\", \"active\", 1, \"form-check-label\", \"ms-1\"], [\"type\", \"radio\", \"formControlName\", \"status\", \"id\", \"inactive\", 1, \"ms-5\", 3, \"value\"], [\"for\", \"inactive\", 1, \"form-check-label\", \"ms-1\"], [\"for\", \"code\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"code\", \"formControlName\", \"code\", 1, \"form-control\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\", 1, \"form-control\"], [1, \"col-md-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [1, \"col-md-7\"], [\"formArrayName\", \"addresses\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"], [1, \"card\", \"mb-3\"], [1, \"row\", 3, \"formGroupName\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"col-md-4\", \"mb-3\"], [\"for\", \"line1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"line1\", \"formControlName\", \"line1\", 1, \"form-control\"], [\"for\", \"line2\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"line2\", \"formControlName\", \"line2\", 1, \"form-control\"], [\"for\", \"postalCode\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"postalCode\", \"formControlName\", \"postalCode\", 1, \"form-control\"], [\"for\", \"country\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"country\", \"formControlName\", \"country\", 1, \"form-control\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"state\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", 1, \"form-control\"], [\"type\", \"radio\", \"formControlName\", \"addressType\", \"value\", \"shipping\", 3, \"id\"], [1, \"form-check-label\", \"ms-1\", 3, \"for\"], [\"type\", \"radio\", \"formControlName\", \"addressType\", \"value\", \"billing\", 1, \"ms-5\", 3, \"id\"]],\n    template: function CreateCustomerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateCustomerComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.customerForm.valid && ctx.formSubmition();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 1)(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵelementStart(11, \"label\", 9);\n        i0.ɵɵtext(12, \"InActive\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 12)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 12)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 19);\n        i0.ɵɵtext(31, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 21);\n        i0.ɵɵelement(34, \"hr\");\n        i0.ɵɵelementStart(35, \"button\", 22);\n        i0.ɵɵtext(36, \"Create new customer\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(37, \"div\", 23);\n        i0.ɵɵelementContainerStart(38, 24);\n        i0.ɵɵtemplate(39, CreateCustomerComponent_ng_container_39_Template, 38, 5, \"ng-container\", 25);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(40, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function CreateCustomerComponent_Template_button_click_40_listener() {\n          return ctx.addAddress();\n        });\n        i0.ɵɵtext(41, \"New address\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.customerForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", false);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"disabled\", ctx.customerForm.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.addresses.controls);\n      }\n    },\n    dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName]\n  });\n  return CreateCustomerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}