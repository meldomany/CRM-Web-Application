{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/authentication.service\";\nexport let TokenHeaderInterceptor = /*#__PURE__*/(() => {\n  class TokenHeaderInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n\n    intercept(request, next) {\n      this.authService.currentUser$.pipe(take(1)).subscribe(response => {\n        if (response?.token != null) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `Bearer ${response.token}`\n            }\n          });\n        }\n      });\n      return next.handle(request);\n    }\n\n  }\n\n  TokenHeaderInterceptor.ɵfac = function TokenHeaderInterceptor_Factory(t) {\n    return new (t || TokenHeaderInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  TokenHeaderInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenHeaderInterceptor,\n    factory: TokenHeaderInterceptor.ɵfac\n  });\n  return TokenHeaderInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}